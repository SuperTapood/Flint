// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: base/port.proto

package base

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Port struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Name     string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Protocol string                 `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// Types that are valid to be assigned to Port:
	//
	//	*Port_Id
	//	*Port_Number
	Port          isPort_Port `protobuf_oneof:"port"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Port) Reset() {
	*x = Port{}
	mi := &file_base_port_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Port) ProtoMessage() {}

func (x *Port) ProtoReflect() protoreflect.Message {
	mi := &file_base_port_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Port.ProtoReflect.Descriptor instead.
func (*Port) Descriptor() ([]byte, []int) {
	return file_base_port_proto_rawDescGZIP(), []int{0}
}

func (x *Port) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Port) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Port) GetPort() isPort_Port {
	if x != nil {
		return x.Port
	}
	return nil
}

func (x *Port) GetId() string {
	if x != nil {
		if x, ok := x.Port.(*Port_Id); ok {
			return x.Id
		}
	}
	return ""
}

func (x *Port) GetNumber() int32 {
	if x != nil {
		if x, ok := x.Port.(*Port_Number); ok {
			return x.Number
		}
	}
	return 0
}

type isPort_Port interface {
	isPort_Port()
}

type Port_Id struct {
	Id string `protobuf:"bytes,3,opt,name=id,proto3,oneof"`
}

type Port_Number struct {
	Number int32 `protobuf:"varint,4,opt,name=number,proto3,oneof"`
}

func (*Port_Id) isPort_Port() {}

func (*Port_Number) isPort_Port() {}

var File_base_port_proto protoreflect.FileDescriptor

const file_base_port_proto_rawDesc = "" +
	"\n" +
	"\x0fbase/port.proto\"j\n" +
	"\x04Port\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bprotocol\x18\x02 \x01(\tR\bprotocol\x12\x10\n" +
	"\x02id\x18\x03 \x01(\tH\x00R\x02id\x12\x18\n" +
	"\x06number\x18\x04 \x01(\x05H\x00R\x06numberB\x06\n" +
	"\x04portB?B\tPortProtoP\x01Z0github.com/SuperTapood/Flint/core/generated/baseb\x06proto3"

var (
	file_base_port_proto_rawDescOnce sync.Once
	file_base_port_proto_rawDescData []byte
)

func file_base_port_proto_rawDescGZIP() []byte {
	file_base_port_proto_rawDescOnce.Do(func() {
		file_base_port_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_base_port_proto_rawDesc), len(file_base_port_proto_rawDesc)))
	})
	return file_base_port_proto_rawDescData
}

var file_base_port_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_base_port_proto_goTypes = []any{
	(*Port)(nil), // 0: Port
}
var file_base_port_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_base_port_proto_init() }
func file_base_port_proto_init() {
	if File_base_port_proto != nil {
		return
	}
	file_base_port_proto_msgTypes[0].OneofWrappers = []any{
		(*Port_Id)(nil),
		(*Port_Number)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_base_port_proto_rawDesc), len(file_base_port_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_base_port_proto_goTypes,
		DependencyIndexes: file_base_port_proto_depIdxs,
		MessageInfos:      file_base_port_proto_msgTypes,
	}.Build()
	File_base_port_proto = out.File
	file_base_port_proto_goTypes = nil
	file_base_port_proto_depIdxs = nil
}
